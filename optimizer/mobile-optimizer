#!/usr/bin/env node

var GeoPackageOptimizer = require('./index.js');

var fs = require('fs')
  , GeoPackageAPI = require('@ngageoint/geopackage');

console.log('GeoPackage Optimizer For Mobile Clients');

var geoPackageFile = process.argv[2];
var outputGeoPackageFile = process.argv[3];

if (!geoPackageFile || !outputGeoPackageFile) {
  console.log('Usage: mobile-optimizer <GeoPackage To Process> <GeoPackage To Write>');
  console.log('If <GeoPackage To Process> and <GeoPackage To Write> are the same, the GeoPackage To Process');
  console.log('will be modified.');
  process.exit(1);
}

var same = outputGeoPackageFile === geoPackageFile;

fs.stat(geoPackageFile, function(err, stats) {
  if (err || !stats || !stats.isFile()) {
    console.log('File does not exist.', geoPackageFile);
    process.exit(1);
  }
  return GeoPackageAPI.open(geoPackageFile)
  .then(function(inputGeoPackage) {
    console.log('Processing %s', geoPackageFile);
    if (same) {
      return GeoPackageAPI.open(outputGeoPackageFile)
      .then(function(outputGeoPackage) {
        return {
          inputGeoPackage: inputGeoPackage,
          outputGeoPackage: outputGeoPackage
        };
      });
    }
    return GeoPackageAPI.create(outputGeoPackageFile)
    .then(function(outputGeoPackage) {
      return {
        inputGeoPackage: inputGeoPackage,
        outputGeoPackage: outputGeoPackage
      };
    });
  })
  .then(function(options) {
    var outputGeoPackage = options.outputGeoPackage;
    var inputGeoPackage = options.inputGeoPackage;

    console.log('Writing mobile optimized GeoPackage to %s', outputGeoPackageFile);
    return GeoPackageOptimizer.optimize({inputGeoPackage: inputGeoPackage, outputGeoPackage: outputGeoPackage, same: same, progress: function(progress) {
      if (progress.description) {
        console.log('Processing %s: %s', progress.layer, progress.description);
      } else {
        console.log('Processing %s: %s of %s tiles complete.', progress.layer, progress.count, progress.totalCount);
      }
    }})
    .then(function() {
      console.log('Optimization Complete, optimized file: %s', outputGeoPackageFile);
      process.exit(0);
    });
  });
});
